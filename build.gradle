buildscript{
    repositories{
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
    }
}
plugins {
    id 'com.bmuschko.clover' version '2.2.3'
}

subprojects {
    repositories{
        google()
        jcenter()
    }
    apply plugin: "com.bmuschko.clover"
    clover{
        compiler{
            additionalArgs = "-g:lines,source,vars"
        }
    }
    tasks.withType(JavaCompile) {
     options.debug = true
    }
    
    
    task resolveDependencies {
       doLast {
           project.rootProject.allprojects.each { subProject ->
               subProject.buildscript.configurations.each { configuration->
                  if(configuration.canBeResolved) {
                     configuration.resolve()
                  }
               }
               subProject.configurations.each { configuration ->
                  if(configuration.canBeResolved) {
                     configuration.resolve()
                  }
               }
           }
       }
    }
}

clover {
  report{
    xml= true
    html = true
  }
}


// Project specific stuff
project (':shared'){
  apply plugin: 'java-library'
  dependencies {
        implementation 'com.google.guava:guava:28.0-jre'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
        clover 'org.openclover:clover:4.3.1'
        testCompile "org.mockito:mockito-core:2.+"
  }
   test{
        testLogging{
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
    test {
        // Use junit platform for unit tests
        useJUnitPlatform()
    }
    configurations {
        testPkg {
            extendsFrom(testRuntime)
        }
    }
    
    task testCode(type: Jar) {
        classifier = 'test'
        from sourceSets.test.output
    }
    
    
    artifacts {
        testPkg testCode
    }


}
project (':server'){
    apply plugin: 'application'
    dependencies {
        implementation 'com.google.guava:guava:28.0-jre'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
        clover 'org.openclover:clover:4.3.1'
        testCompile "org.mockito:mockito-core:2.+"
        implementation project(':shared')
	implementation project(':client')
        testImplementation project(path: ':shared', configuration: "testPkg")
    }
     test{
        testLogging{
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
    test {
        // Use junit platform for unit tests
        useJUnitPlatform()
    }


}
project (':client'){
   apply plugin: 'com.android.application'
    dependencies {
        implementation project(':shared')
        testImplementation project(path: ':shared', configuration: "testPkg")
    } 
}

tasks.register("run-server") {
    dependsOn project('server').getTasksByName('run',false)
    group = 'Run Client/Server'
    description = 'Run the Server'
}

tasks.register("run-client") {
    dependsOn project('client').getTasksByName('run',false)
    group = 'Run Client/Server'
    description = 'Run the Client'
}




